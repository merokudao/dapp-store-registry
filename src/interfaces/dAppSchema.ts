const dAppDeploymentPlatforms = ['ios', 'web', 'android'] as const;

export type DAppDeploymentPlatform = typeof dAppDeploymentPlatforms[number];

/**
 * A schema for dapps for dApp Registry
 */
export interface DAppSchema {
  /**
   * The name of the dApp. This is what is shown on listing
   */
  name: string;
  /**
   * A detailed description of the dApp
   */
  description: string;
  images: {
    logo: string;
    banner: string;
    screenshots: string[];
  };
  /**
   * If this is in OpenSource, the URL of the repository
   */
  repoUrl?: string;
  /**
   * A Unique ID for each dApp.
   */
  dappId: string;
  /**
   * The min age of user who should access this dApp
   */
  minAge: number;
  /**
   * Boolean to signify if the dApp is for mature audience
   */
  isForMatureAudience: boolean;
  /**
   * Boolean to signify if the dApp developers have a moderation in place for the content posted/generated by the dApp or it's users
   */
  isSelfModerated: boolean;
  /**
   * A string in ISO-639-1 which signifies the language of the dApp
   */
  language: string;
  /**
   * The version of the dApp that is available on the dApp store
   */
  version: string;
  /**
   * The date on which this dApp is listed on dApp store. This date can be a future date as well. This can not be in past.
   */
  listDate: string;
  /**
   * A string signifying if the dApp is available on which platform - web, iOS, android
   *
   * @minItems 1
   */
  availableOnPlatform: string[];
  developer: {
    /**
     * Legal name of the developer or the company
     */
    legalName: string;
    logo: string;
    website: string;
    privacyPolicyUrl: string;
    support: {
      url: string;
      email?: string;
    };
  };
  /**
   * @minItems 1
   */
  tags: string[];
  /**
   * @minItems 1
   */
  chains: number[];
}
